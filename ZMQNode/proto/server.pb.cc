// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#include "server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_server_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_server_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServiceProfile;
}  // namespace protobuf_server_2eproto
namespace CPG {
class ServiceProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceProfile>
      _instance;
} _ServiceProfile_default_instance_;
class ServiceRegisterRQDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceRegisterRQ>
      _instance;
} _ServiceRegisterRQ_default_instance_;
class ServiceRegisterRSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceRegisterRS>
      _instance;
} _ServiceRegisterRS_default_instance_;
}  // namespace CPG
namespace protobuf_server_2eproto {
static void InitDefaultsServiceProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPG::_ServiceProfile_default_instance_;
    new (ptr) ::CPG::ServiceProfile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPG::ServiceProfile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServiceProfile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServiceProfile}, {}};

static void InitDefaultsServiceRegisterRQ() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPG::_ServiceRegisterRQ_default_instance_;
    new (ptr) ::CPG::ServiceRegisterRQ();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPG::ServiceRegisterRQ::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServiceRegisterRQ =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServiceRegisterRQ}, {
      &protobuf_server_2eproto::scc_info_ServiceProfile.base,}};

static void InitDefaultsServiceRegisterRS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CPG::_ServiceRegisterRS_default_instance_;
    new (ptr) ::CPG::ServiceRegisterRS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CPG::ServiceRegisterRS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServiceRegisterRS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServiceRegisterRS}, {
      &protobuf_server_2eproto::scc_info_ServiceProfile.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceProfile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceRegisterRQ.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceRegisterRS.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceProfile, servicetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceProfile, sockettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceProfile, addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceRegisterRQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceRegisterRQ, service_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceRegisterRS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CPG::ServiceRegisterRS, connectservices_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CPG::ServiceProfile)},
  { 8, -1, sizeof(::CPG::ServiceRegisterRQ)},
  { 14, -1, sizeof(::CPG::ServiceRegisterRS)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPG::_ServiceProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPG::_ServiceRegisterRQ_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::CPG::_ServiceRegisterRS_default_instance_),
};

static void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "server.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

static void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

static void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014server.proto\022\003CPG\"G\n\016ServiceProfile\022\023\n"
      "\013serviceType\030\001 \001(\005\022\022\n\nsocketType\030\002 \001(\005\022\014"
      "\n\004addr\030\003 \001(\t\"9\n\021ServiceRegisterRQ\022$\n\007ser"
      "vice\030\001 \001(\0132\023.CPG.ServiceProfile\"A\n\021Servi"
      "ceRegisterRS\022,\n\017connectServices\030\001 \003(\0132\023."
      "CPG.ServiceProfileb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_server_2eproto
namespace CPG {

// ===================================================================

void ServiceProfile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceProfile::kServiceTypeFieldNumber;
const int ServiceProfile::kSocketTypeFieldNumber;
const int ServiceProfile::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceProfile::ServiceProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_ServiceProfile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPG.ServiceProfile)
}
ServiceProfile::ServiceProfile(const ServiceProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.addr().size() > 0) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  ::memcpy(&servicetype_, &from.servicetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&sockettype_) -
    reinterpret_cast<char*>(&servicetype_)) + sizeof(sockettype_));
  // @@protoc_insertion_point(copy_constructor:CPG.ServiceProfile)
}

void ServiceProfile::SharedCtor() {
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&servicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sockettype_) -
      reinterpret_cast<char*>(&servicetype_)) + sizeof(sockettype_));
}

ServiceProfile::~ServiceProfile() {
  // @@protoc_insertion_point(destructor:CPG.ServiceProfile)
  SharedDtor();
}

void ServiceProfile::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceProfile::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceProfile& ServiceProfile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_ServiceProfile.base);
  return *internal_default_instance();
}


void ServiceProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:CPG.ServiceProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&servicetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sockettype_) -
      reinterpret_cast<char*>(&servicetype_)) + sizeof(sockettype_));
  _internal_metadata_.Clear();
}

bool ServiceProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPG.ServiceProfile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 serviceType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &servicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 socketType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sockettype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->addr().data(), static_cast<int>(this->addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CPG.ServiceProfile.addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPG.ServiceProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPG.ServiceProfile)
  return false;
#undef DO_
}

void ServiceProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPG.ServiceProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 serviceType = 1;
  if (this->servicetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->servicetype(), output);
  }

  // int32 socketType = 2;
  if (this->sockettype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sockettype(), output);
  }

  // string addr = 3;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CPG.ServiceProfile.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CPG.ServiceProfile)
}

::google::protobuf::uint8* ServiceProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPG.ServiceProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 serviceType = 1;
  if (this->servicetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->servicetype(), target);
  }

  // int32 socketType = 2;
  if (this->sockettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sockettype(), target);
  }

  // string addr = 3;
  if (this->addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CPG.ServiceProfile.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPG.ServiceProfile)
  return target;
}

size_t ServiceProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPG.ServiceProfile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string addr = 3;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  // int32 serviceType = 1;
  if (this->servicetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->servicetype());
  }

  // int32 socketType = 2;
  if (this->sockettype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sockettype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPG.ServiceProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPG.ServiceProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPG.ServiceProfile)
    MergeFrom(*source);
  }
}

void ServiceProfile::MergeFrom(const ServiceProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPG.ServiceProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addr().size() > 0) {

    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  if (from.servicetype() != 0) {
    set_servicetype(from.servicetype());
  }
  if (from.sockettype() != 0) {
    set_sockettype(from.sockettype());
  }
}

void ServiceProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPG.ServiceProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceProfile::CopyFrom(const ServiceProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPG.ServiceProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceProfile::IsInitialized() const {
  return true;
}

void ServiceProfile::Swap(ServiceProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceProfile::InternalSwap(ServiceProfile* other) {
  using std::swap;
  addr_.Swap(&other->addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(servicetype_, other->servicetype_);
  swap(sockettype_, other->sockettype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceProfile::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceRegisterRQ::InitAsDefaultInstance() {
  ::CPG::_ServiceRegisterRQ_default_instance_._instance.get_mutable()->service_ = const_cast< ::CPG::ServiceProfile*>(
      ::CPG::ServiceProfile::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceRegisterRQ::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceRegisterRQ::ServiceRegisterRQ()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_ServiceRegisterRQ.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPG.ServiceRegisterRQ)
}
ServiceRegisterRQ::ServiceRegisterRQ(const ServiceRegisterRQ& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_service()) {
    service_ = new ::CPG::ServiceProfile(*from.service_);
  } else {
    service_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:CPG.ServiceRegisterRQ)
}

void ServiceRegisterRQ::SharedCtor() {
  service_ = NULL;
}

ServiceRegisterRQ::~ServiceRegisterRQ() {
  // @@protoc_insertion_point(destructor:CPG.ServiceRegisterRQ)
  SharedDtor();
}

void ServiceRegisterRQ::SharedDtor() {
  if (this != internal_default_instance()) delete service_;
}

void ServiceRegisterRQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceRegisterRQ::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceRegisterRQ& ServiceRegisterRQ::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_ServiceRegisterRQ.base);
  return *internal_default_instance();
}


void ServiceRegisterRQ::Clear() {
// @@protoc_insertion_point(message_clear_start:CPG.ServiceRegisterRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
  _internal_metadata_.Clear();
}

bool ServiceRegisterRQ::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPG.ServiceRegisterRQ)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .CPG.ServiceProfile service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPG.ServiceRegisterRQ)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPG.ServiceRegisterRQ)
  return false;
#undef DO_
}

void ServiceRegisterRQ::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPG.ServiceRegisterRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CPG.ServiceProfile service = 1;
  if (this->has_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_service(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CPG.ServiceRegisterRQ)
}

::google::protobuf::uint8* ServiceRegisterRQ::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPG.ServiceRegisterRQ)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .CPG.ServiceProfile service = 1;
  if (this->has_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_service(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPG.ServiceRegisterRQ)
  return target;
}

size_t ServiceRegisterRQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPG.ServiceRegisterRQ)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .CPG.ServiceProfile service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *service_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceRegisterRQ::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPG.ServiceRegisterRQ)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceRegisterRQ* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceRegisterRQ>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPG.ServiceRegisterRQ)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPG.ServiceRegisterRQ)
    MergeFrom(*source);
  }
}

void ServiceRegisterRQ::MergeFrom(const ServiceRegisterRQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPG.ServiceRegisterRQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service()) {
    mutable_service()->::CPG::ServiceProfile::MergeFrom(from.service());
  }
}

void ServiceRegisterRQ::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPG.ServiceRegisterRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceRegisterRQ::CopyFrom(const ServiceRegisterRQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPG.ServiceRegisterRQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceRegisterRQ::IsInitialized() const {
  return true;
}

void ServiceRegisterRQ::Swap(ServiceRegisterRQ* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceRegisterRQ::InternalSwap(ServiceRegisterRQ* other) {
  using std::swap;
  swap(service_, other->service_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceRegisterRQ::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServiceRegisterRS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceRegisterRS::kConnectServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceRegisterRS::ServiceRegisterRS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_2eproto::scc_info_ServiceRegisterRS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:CPG.ServiceRegisterRS)
}
ServiceRegisterRS::ServiceRegisterRS(const ServiceRegisterRS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      connectservices_(from.connectservices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPG.ServiceRegisterRS)
}

void ServiceRegisterRS::SharedCtor() {
}

ServiceRegisterRS::~ServiceRegisterRS() {
  // @@protoc_insertion_point(destructor:CPG.ServiceRegisterRS)
  SharedDtor();
}

void ServiceRegisterRS::SharedDtor() {
}

void ServiceRegisterRS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceRegisterRS::descriptor() {
  ::protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceRegisterRS& ServiceRegisterRS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_2eproto::scc_info_ServiceRegisterRS.base);
  return *internal_default_instance();
}


void ServiceRegisterRS::Clear() {
// @@protoc_insertion_point(message_clear_start:CPG.ServiceRegisterRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connectservices_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceRegisterRS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CPG.ServiceRegisterRS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CPG.ServiceProfile connectServices = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_connectservices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CPG.ServiceRegisterRS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CPG.ServiceRegisterRS)
  return false;
#undef DO_
}

void ServiceRegisterRS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CPG.ServiceRegisterRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPG.ServiceProfile connectServices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connectservices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->connectservices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CPG.ServiceRegisterRS)
}

::google::protobuf::uint8* ServiceRegisterRS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CPG.ServiceRegisterRS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPG.ServiceProfile connectServices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->connectservices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->connectservices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPG.ServiceRegisterRS)
  return target;
}

size_t ServiceRegisterRS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPG.ServiceRegisterRS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .CPG.ServiceProfile connectServices = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->connectservices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->connectservices(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceRegisterRS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPG.ServiceRegisterRS)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceRegisterRS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceRegisterRS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPG.ServiceRegisterRS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPG.ServiceRegisterRS)
    MergeFrom(*source);
  }
}

void ServiceRegisterRS::MergeFrom(const ServiceRegisterRS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPG.ServiceRegisterRS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  connectservices_.MergeFrom(from.connectservices_);
}

void ServiceRegisterRS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPG.ServiceRegisterRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceRegisterRS::CopyFrom(const ServiceRegisterRS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPG.ServiceRegisterRS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceRegisterRS::IsInitialized() const {
  return true;
}

void ServiceRegisterRS::Swap(ServiceRegisterRS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceRegisterRS::InternalSwap(ServiceRegisterRS* other) {
  using std::swap;
  CastToBase(&connectservices_)->InternalSwap(CastToBase(&other->connectservices_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceRegisterRS::GetMetadata() const {
  protobuf_server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CPG
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPG::ServiceProfile* Arena::CreateMaybeMessage< ::CPG::ServiceProfile >(Arena* arena) {
  return Arena::CreateInternal< ::CPG::ServiceProfile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPG::ServiceRegisterRQ* Arena::CreateMaybeMessage< ::CPG::ServiceRegisterRQ >(Arena* arena) {
  return Arena::CreateInternal< ::CPG::ServiceRegisterRQ >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::CPG::ServiceRegisterRS* Arena::CreateMaybeMessage< ::CPG::ServiceRegisterRS >(Arena* arena) {
  return Arena::CreateInternal< ::CPG::ServiceRegisterRS >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
